parameters:
# share/dolfin/DOLFINConfig.cmake contains hard-coded path
- name: relocatable
  type: bool
  default: false

extends: [cmake_package]

dependencies:
  build: [lapack, boost, bzip2, eigen, ffc, fiat, instant, libxml2, mpi, numpy, pkg-config, ply, python, six, swig, sympy, ufl, +zlib, +hdf5, +parmetis, +petsc, +petsc4py, +suitesparse, +scotch, +slepc, +slepc4py, +vtk]

sources:
- key: tar.gz:2omag5d7u5jyxnjmz7bepbcn7wqkxcs5
  url: https://bitbucket.org/fenics-project/dolfin/downloads/dolfin-1.5.0.tar.gz

build_stages: 
- name: configure ## See dolfin.py for details
  mode: replace
  after: setup_builddir
#  build_type: {{build_type}}

- when: platform == 'linux' 
  name: fix-rpath
  after: install
  handler: bash
  bash: |
    for lib in ${ARTIFACT}/lib/python{{pyver}}/site-packages/dolfin/cpp/_*.so; do
        oldRPath=$(${PATCHELF} --print-rpath ${lib})
        ${PATCHELF} --set-rpath $oldRPath:${ARTIFACT}/lib ${lib}
    done

- when: platform == 'Darwin'
  name: fix-rpath
  after: install
  handler: bash
  bash: |
    # FIXME: use install_name_tool to fix rpath

- when: platform == 'Cygwin'
  name: dll_fix
  handler: bash
  after: install
  bash: |
    install dolfin/cyg*.dll ${ARTIFACT}/bin
    install dolfin/swig/modules/**/*.dll ${ARTIFACT}/lib/python{{pyver}}/site-packages/dolfin/cpp

when_build_dependency:
- when platform == 'Cygwin':
  - {prepend_path: PATH, value: '${ARTIFACT}/bin'}

profile_links:
- when: platform == 'Cygwin'
  name: copy_dlls
  copy: 'bin/*.dll'

- when: platform == 'Cygwin'
  name: copy_python_dlls
  copy: 'lib/python{{pyver}}/site-packages/dolfin/cpp/*.dll'

- name: everything
  link: '*/**/*'
