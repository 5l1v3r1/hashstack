import os

def include(package):
    return os.path.join(os.getenv(package.upper()+'_DIR'), 'include')

def lib(package):
    return os.path.join(os.getenv(package.upper()+'_DIR'), 'lib')


PROTEUS_INCLUDE_DIR = os.path.join(os.getenv('PROTEUS_PREFIX'), 'include')
PROTEUS_LIB_DIR = os.path.join(os.getenv('PROTEUS_PREFIX'), 'lib')

PROTEUS_EXTRA_COMPILE_ARGS= ['-Wall']

mac_target = os.getenv('MACOSX_DEPLOYMENT_TARGET')
if mac_target:
    PROTEUS_EXTRA_COMPILE_ARGS += ['-I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX'+ mac_target+ '.sdk/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/Headers/']

PROTEUS_EXTRA_LINK_ARGS=['']
PROTEUS_EXTRA_FC_COMPILE_ARGS= ['-Wall']
PROTEUS_EXTRA_FC_LINK_ARGS=['']

PROTEUS_SUPERLU_INCLUDE_DIR = include('superlu')
PROTEUS_SUPERLU_H   = r'"slu_ddefs.h"'
PROTEUS_SUPERLU_LIB_DIR = lib('superlu')
PROTEUS_SUPERLU_LIB = 'superlu_4.1'

PROTEUS_BLAS_INCLUDE_DIR = '.'
PROTEUS_BLAS_H     = r'"cblas.h"'
PROTEUS_BLAS_LIB_DIR = '.'
PROTEUS_BLAS_LIB   = 'm'

PROTEUS_LAPACK_INCLUDE_DIR = '.'
PROTEUS_LAPACK_H   = r'"clapack.h"'
PROTEUS_LAPACK_LIB_DIR = '.'
PROTEUS_LAPACK_LIB = 'm'
PROTEUS_LAPACK_INTEGER = '__CLPK_integer'

PROTEUS_TRIANGLE_INCLUDE_DIR = include('triangle')
PROTEUS_TRIANGLE_H = r'"triangle.h"'
PROTEUS_TRIANGLE_LIB_DIR = lib('triangle')
PROTEUS_TRIANGLE_LIB ='tri'

PROTEUS_DAETK_INCLUDE_DIR = include('daetk')
PROTEUS_DAETK_LIB_DIR = lib('daetk')
PROTEUS_DAETK_LIB ='daetk'

PROTEUS_MPI_INCLUDE_DIR = include('mpi')
PROTEUS_MPI_LIB_DIR = lib('mpi')
PROTEUS_MPI_LIBS =[]

PROTEUS_PETSC_LIB_DIRS = []
PROTEUS_PETSC_LIBS = []
PROTEUS_PETSC_INCLUDE_DIRS = []
