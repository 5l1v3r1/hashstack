parameters:
  - name: pyver
    default: '2.7'

  - name: link

  - name: version
    default: 2.7.9

  - name: python_framework
    type: bool
    default: false

  - name: relocatable
    type: bool
    default: false

extends: [autotools_package]

sources:
- url: http://python.org/ftp/python/{{version}}/Python-{{version}}.tgz
  key:
    when version == '2.7.9': tar.gz:zc52gptgvqzadwv5yvlpb2t47zvmcgkg
    when version == '3.2.6': tar.gz:7qpecklofhkhn5uwga5mvyutvz5cgehq
    when version == '3.3.6': tar.gz:bjmk2hy555hmzefrrmgeccr2bynert3w
    when version == '3.4.3': tar.gz:rn2d6vxj4uf7ber3t2oelxmspqdr26vf

dependencies:
  build: [zlib, bzip2, sqlite, openssl, launcher, ncurses, readline, +gdbm, +perl]
  run: []

build_stages:
  - when: link == 'shared'
    name: configure
    mode: update
    append: {LDFLAGS: "-Wl,-rpath,${ARTIFACT}/lib"}
    extra: ['--enable-shared']

  - when: pyver == '3.4'
    name: configure
    mode: update
    extra: ['--without-ensurepip']

  - when: python_framework
    name: configure
    mode: update
    extra: ['--enable-framework=${ARTIFACT}']

  - when: python_framework
    name: install
    after: make
    mode: replace
    handler: bash
    bash: |
      make install PYTHONAPPSDIR=${ARTIFACT}
      rm -f ${ARTIFACT}/lib/*.la


  - when: python_framework
    name: add_links
    files: [sitecustomize.py]
    after: install
    before: test_modules
    handler: bash
    bash: |
      # This is needed to get site-packages to resolve correctly
      # replace the python binaries with a hardlink to the Python "Framework" binary
      rm ${ARTIFACT}/bin/python
      rm ${ARTIFACT}/bin/pythonw
      rm ${ARTIFACT}/bin/python2
      rm ${ARTIFACT}/bin/pythonw2
      rm ${ARTIFACT}/bin/python2.7
      rm ${ARTIFACT}/bin/pythonw2.7
      ln ${ARTIFACT}/Python.framework/Versions/{{pyver}}/Resources/Python.app/Contents/MacOS/Python ${ARTIFACT}/bin/python
      ln ${ARTIFACT}/Python.framework/Versions/{{pyver}}/Resources/Python.app/Contents/MacOS/Python ${ARTIFACT}/bin/pythonw
      ln ${ARTIFACT}/Python.framework/Versions/{{pyver}}/Resources/Python.app/Contents/MacOS/Python ${ARTIFACT}/bin/python2
      ln ${ARTIFACT}/Python.framework/Versions/{{pyver}}/Resources/Python.app/Contents/MacOS/Python ${ARTIFACT}/bin/pythonw2
      ln ${ARTIFACT}/Python.framework/Versions/{{pyver}}/Resources/Python.app/Contents/MacOS/Python ${ARTIFACT}/bin/python2.7
      ln ${ARTIFACT}/Python.framework/Versions/{{pyver}}/Resources/Python.app/Contents/MacOS/Python ${ARTIFACT}/bin/pythonw2.7

      cp -f _hashdist/sitecustomize.py ${ARTIFACT}/Python.framework/Versions/{{pyver}}/lib/python{{pyver}}/site-packages/sitecustomize.py


      # These are needed to get top-level installation root semantics when needed.
      ln -s ./Python.framework/Versions/{{pyver}}/include ${ARTIFACT}/include
      ln -s ./Python.framework/Versions/{{pyver}}/lib ${ARTIFACT}/lib
      ln -s ./Python.framework/Versions/{{pyver}}/share ${ARTIFACT}/share


# Make sure extension modules were built correctly. This should be part of the
# Python buildsystem, but unfortunately currently it will silently succeed even
# if any of the modules below fail.


  - when: pyver != '2.7'
    name: python_binary
    after: install
    before: test_modules
    handler: bash
    bash: |
      cp $ARTIFACT/bin/python3 $ARTIFACT/bin/python

  - name: test_modules
    after: install
    handler: bash
    bash: |
      echo "import math"
      $ARTIFACT/bin/python -c "import math"
      echo "    ok"

      # Test bzip2:
      echo "import bz2"
      $ARTIFACT/bin/python -c "import bz2"
      echo "    ok"

      # Make sure sufficient crypto support is available in the built python.
      echo "import hashlib"
      $ARTIFACT/bin/python -c "import hashlib"
      echo "    ok"

      # Make sure SSL works
      echo "import _ssl"
      $ARTIFACT/bin/python -c "import _ssl"
      echo "    ok"

      echo "import _hashlib"
      $ARTIFACT/bin/python -c "import _hashlib"
      echo "    ok"

      # Make sure HTTPS works
      echo "Test https support in httplib"
      $ARTIFACT/bin/python << EOF
      try:
          import httplib
      except ImportError:
          import http.client as httplib
      assert hasattr(httplib, 'HTTPSConnection')
      EOF
      echo "    ok"

      # Test sqlite3
      echo "import _sqlite3"
      $ARTIFACT/bin/python -c "import _sqlite3"
      echo "    ok"


when_build_dependency:
  - set: PYTHON
    value: ${ARTIFACT}/bin/python
  - when: pyver != '2.7'
    set: PYTHONDONTWRITEBYTECODE
    value: 'yes'
  - prepend_path: PATH
    value: '${ARTIFACT}/bin'
  - prepend_path: PKG_CONFIG_PATH
    value: '${ARTIFACT}/lib/pkgconfig'

profile_links:
  - name: python_binaries
    before: everything
    launcher: 'bin/*'

  - name: python_packages
    link: 'lib/python{{pyver}}/site-packages/*'
    dirs: true

  - name: python_exclude
    after: python_packages
    before: everything

    exclude: 'lib/python{{pyver}}/site-packages/**/*'
